apply plugin: 'maven-publish'
apply plugin: 'signing'


Properties properties = new Properties()
properties.load(project.file('./upload.properties').newDataInputStream())

def DEFAULT_POM_NAME = 'gesture'
def DEFAULT_POM_VERSION = '1.0.1'  //har包版本信息
def DEFAULT_POM_ARTIFACT_ID = "gestureview"  //har包ID
def DEFAULT_POM_GROUP_ID = 'io.gitee.chordwang'  //项目组ID
def DEFAULT_POM_PACKAGING = 'har'  //包类型，固定为har
def DEFAULT_POM_DESCRIPTION = 'gesture view'
def MAVEN_USERNAME = properties.getProperty('MAVEN_USERNAME')  //远程Maven仓的用户名
def MAVEN_PASSWORD = properties.getProperty('MAVEN_PASSWORD')  //远程Maven仓的密码
def LOCAL_MAVEN_REPOSITORY_URL = properties.getProperty('LOCAL_MAVEN_REPOSITORY_URL')//本地Maven仓地址
def REMOTE_MAVEN_REPOSITORY_URL = properties.getProperty('REMOTE_MAVEN_REPOSITORY_URL')//远程Maven仓地址
def PROJECT_URL=properties.getProperty("PROJECT_URL")
def PROJECT_URL_GIT=properties.getProperty("PROJECT_URL_GIT")
def MAVEN_ID=properties.getProperty("MAVEN_ID")
def MAVEN_NAME=properties.getProperty("MAVEN_NAME")
def MAVEN_EMAIL=properties.getProperty("MAVEN_EMAIL")

afterEvaluate { project ->
    publishing {
        publications {
            maven(MavenPublication) {
                from components.release  //指定发布的har包类型为debug或release
                group = DEFAULT_POM_GROUP_ID
                artifactId = DEFAULT_POM_ARTIFACT_ID
                version = DEFAULT_POM_VERSION
                pom {
                    name = DEFAULT_POM_NAME
                    description = DEFAULT_POM_DESCRIPTION
                    packaging = DEFAULT_POM_PACKAGING
                    url = PROJECT_URL

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = MAVEN_ID
                            name = MAVEN_NAME
                            email =  MAVEN_EMAIL
                        }
                    }
                    scm {
                        connection = PROJECT_URL_GIT
                        developerConnection = PROJECT_URL_GIT
                        url = PROJECT_URL
                    }
                }
            }
        }
        repositories {
            maven {
                //url = LOCAL_MAVEN_REPOSITORY_URL  //发布到本地Maven仓
                //发布到远程Maven仓的地址以及Maven仓的帐号和密码
                url = REMOTE_MAVEN_REPOSITORY_URL
                tasks.each {
                    if (it.name.contains('Local')){
                        println("发布到本地Maven仓")
                        url = LOCAL_MAVEN_REPOSITORY_URL
                    }else {
                        println("发布到远程Maven仓")
                        url = REMOTE_MAVEN_REPOSITORY_URL
                    }
                }
                credentials {
                    username = MAVEN_USERNAME
                    password = MAVEN_PASSWORD
                }
            }
        }
    }

    signing {
        sign publishing.publications.maven
    }
}
